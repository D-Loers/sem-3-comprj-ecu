@startuml Infotainment

class Infotainment{
- receiver: IReceiver&
- transmitter: ITransmitter&
- gasPedal: IGasPedal&
- brake: IBrake&
- display: IDisplay&
- headlightButton: IHeadlightButton&
- indicatorJoyStick: IIndicatorJoystick&
}

class GasPedal{
- pin: int
}

class Brake{
- pin: int
}

class Display{
}

class HeadlightButton{
- pin: int
}

class IndicatorJoystick{
- joystick: Joystick
}

interface IGasPedal{
+ void GetPedalPosition()
}

interface IBrake{
+ void GetBrakeState()
}

interface IDisplay{
+ void Show()
}

interface IHeadlightButton{
+ void GetState()
}

interface IIndicatorJoystick{
+ void GetXPosition()
+ void GetYPosition()
}

class CANBus {
- formatter: CANMessageFormatter&
+ CANBus()
}

class CANMessageFormatter{
+ GetFormattedMessage(void): Message
}

interface ITransmitter {
+ SendMessage(const Message): void
}

interface IReceiver {
+ IsMessageAvailable(void): bool
+ GetMessage(void): Message
}

Infotainment o-- IGasPedal
Infotainment o-- IBrake
Infotainment o-- IDisplay
Infotainment o-- IHeadlightButton
Infotainment o-- IIndicatorJoystick
Infotainment o-- ITransmitter
Infotainment o-- IReceiver

GasPedal .u.|> IGasPedal

Brake .u.|> IBrake

Display .u.|> IDisplay

HeadlightButton .u.|> IHeadlightButton

IndicatorJoystick .u.|> IIndicatorJoystick

CANBus .u.|> ITransmitter
CANBus .u.|> IReceiver
CANBus -l-o CANMessageFormatter

@enduml